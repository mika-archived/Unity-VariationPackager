name: Release by Tag

on:
  push:
    tags:
      - "v**"

jobs:
  release-by-tag-booth:
    runs-on: ubuntu-latest
    container: docker://gableroux/unity3d:2018.4.20f1

    steps:
      - name: Upgrade Git to latest version
        run: |
          apt update -qq
          apt install software-properties-common -y
          add-apt-repository ppa:git-core/ppa -y
          apt update -qq
          apt install git git-lfs -y

      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Prepare Unity3D for building package(s)
        run: |
          mkdir -p /root/.cache/unity3d
          mkdir -p /root/.local/share/unity3d/Unity
          echo $UNITY_LICENSE | base64 --decode | openssl enc -pbkdf2 -aes-256-cbc -d -k $CIPHER_KEY > /root/.local/share/unity3d/Unity/Unity_lic.ulf
        env:
          CIPHER_KEY: ${{ secrets.CIPHER_KEY }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - name: Unity License Activation
        run: |
          /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile /root/.local/share/unity3d/Unity/Unity_lic.ulf || exit 0

      - name: Create Packages by Variation Packager
        run: |
          /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod Mochizuki.VariationPackager.Packaging.AutomatedRelease.Build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Release Artifacts
          path: ./Assets/Mochizuki/Packages/

  release-by-tag-npm:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Publish to NPM
        run: |
          cd ./Assets/Mochizuki/VariationPackager
          npm publish --access public
